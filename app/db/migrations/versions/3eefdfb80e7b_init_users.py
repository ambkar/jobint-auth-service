"""init users

Revision ID: 3eefdfb80e7b
Revises: 
Create Date: 2025-06-29 14:54:18.237732

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3eefdfb80e7b'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('companies')
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('users', 'avatar',
               existing_type=postgresql.BYTEA(),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_constraint(op.f('users_email_key'), 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint(op.f('users_email_key'), 'users', ['email'])
    op.alter_column('users', 'avatar',
               existing_type=sa.String(),
               type_=postgresql.BYTEA(),
               existing_nullable=True)
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.create_table('companies',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('short_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mission', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('values', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('employees_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('stage', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('culture', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('directions', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('logo', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('companies_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('companies_pkey')),
    sa.UniqueConstraint('user_id', name=op.f('companies_user_id_key'))
    )
    # ### end Alembic commands ###
